import requests
import dbworker
import pickle
import markups as markup

import telebot
from config import token  # –∏–∑ —Ñ–∞–π–ª–∞ config.py –∑–∞–±–∏—Ä–∞–µ–º –Ω–∞—à—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å —Ç–æ–∫–µ–Ω–æ–º

bot = telebot.TeleBot(token)



my_dict = {"–û–≤–µ–Ω": 1,
           "–¢–µ–ª–µ—Ü": 2,
           "–ë–ª–∏–∑–Ω–µ—Ü—ã": 3,
           "–†–∞–∫": 4,
           "–õ–µ–≤": 5,
           "–î–µ–≤–∞": 6,
           "–í–µ—Å—ã": 7,
           "–°–∫–æ—Ä–ø–∏–æ–Ω": 8,
           "–°—Ç—Ä–µ–ª–µ—Ü": 9,
           "–ö–æ–∑–µ—Ä–æ–≥": 10,
           "–í–æ–¥–æ–ª–µ–π": 11,
           "–†—ã–±—ã": 12,
           }


@bot.message_handler(commands=["start"])
def start(message):
    result = dbworker.check_user_exist(message.chat.id)
    if result is True:
        msg = """–ü—Ä–∏–≤–µ—Ç! –ü—Ä–µ–∂–¥–µ —á–µ–º –º—ã –Ω–∞—á–Ω–µ–º, —è —Ö–æ—Ç–µ–ª –±—ã, —á—Ç–æ–±—ã –≤—ã –≤—ã–±—Ä–∞–ª–∏ —Å–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Å–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞!\n\n–Ø..."""
        bot.send_message(message.chat.id, text=msg, reply_markup=markup.initialization())


def initialization_complete(message, horoscope):
    msg = """–ü—Ä–∏–≤–µ—Ç {}. –¢—ã –º–æ–∂–µ—à—å /subscribe –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –∏–ª–∏ /unsubscribe –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –ø–æ–¥–ø–∏—Å–∫–∏, –µ—Å–ª–∏ –≤—ã –±–æ–ª—å—à–µ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –Ω–∏–∫–∞–∫–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.\n\n–î–∞–∂–µ –µ—Å–ª–∏ –≤—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –ø–æ–¥–ø–∏—Å–∫–∏, –≤—ã –≤—Å–µ —Ä–∞–≤–Ω–æ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à–∏ –∫–æ–º–∞–Ω–¥—ã. –ù–∞–∂–º–∏—Ç–µ /help , —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –±–æ–ª—å—à–µ."""
    bot.edit_message_text(chat_id=message.chat.id,
                          message_id=message.message_id,
                          text=msg.format(horoscope))


@bot.message_handler(commands=["help"])
def cmd_help(message):
    msg = """*Available commands*\n\n/today - –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è.\n/tomorrow - –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ\n/settings - –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –∑–Ω–∞–∫ –ó–∞–¥–∏–∞–∫–∞\n/subscribe - –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É\n/unsubscribe - –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è"""
    bot.send_message(message.chat.id, parse_mode="Markdown", text=msg)


@bot.message_handler(commands=["today"])
def web_scrap_today(message):
    try:
        horoscope = dbworker.get_horoscope(message.chat.id)
        sign = my_dict[horoscope]
        url = "https://www.horoscope.com/us/horoscopes/general/horoscope-general-daily-today.aspx?sign={}".format(sign)
        r = requests.get(url)
        soup = BeautifulSoup(r.text, "html.parser")
        data = soup.find_all("main", class_="main-horoscope")[0]
        date = data.p.strong.text
        todays_horoscope = data.p.strong.next_sibling.replace("-", "")
        bot.send_message(message.chat.id, text=date + " - " + horoscope + "\n\n" + todays_horoscope)
    except:
        bot.send_message(message.chat.id, text="–Ω–µ –º–æ–≥—É –ø–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è... üò≠üò≠")


@bot.message_handler(commands=["tomorrow"])
def web_scrap_tomorrow(message):
    bot.send_message(message.chat.id, text="–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞.")


@bot.message_handler(commands=["subscribe"])
def subscribe(message):
    messageobj = pickle.dumps(message, pickle.HIGHEST_PROTOCOL)
    dbworker.add_to_subscribers(message.chat.id, messageobj)
    bot.send_message(message.chat.id, text="–ó–¥–æ—Ä–æ–≤–æ! –≤—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –Ω–∞—à—É –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É.")


@bot.message_handler(commands=["unsubscribe"])
def unsubscribe(message):
    dbworker.remove_subscriber(message.chat.id)
    bot.send_message(message.chat.id, text="–ü—Ä–æ—â–∞–π üò≠üò≠... –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç –Ω–∞—à–µ–π –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏.")


@bot.message_handler(commands=["settings"])
def settings(message):
    bot.send_message(message.chat.id, text="–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?", reply_markup=markup.settings_menu())


def settings_change_horoscope(message):
    bot.edit_message_text(chat_id=message.chat.id,
                          message_id=message.message_id,
                          text="–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –≥–æ—Ä–æ—Å–∫–æ–ø –µ—â—ë —Ä–∞–∑",
                          reply_markup=markup.change_horoscope())


@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data.startswith("horoscope_"):
        horoscope = call.data.split("_")[1]
        horoscope = horoscope.split(" ")[0]
        bot.answer_callback_query(call.id, text="–û—É, —Ç—ã " + horoscope + "!", show_alert=True)
        dbworker.initialize_user(call.message.chat.id, horoscope)
        initialization_complete(call.message, horoscope)
    elif call.data == "change_horoscope":
        bot.answer_callback_query(call.id)
        settings_change_horoscope(call.message)
    elif call.data.startswith("change_"):
        bot.answer_callback_query(call.id)
        horoscope = call.data.split("_")[1]
        horoscope = horoscope.split(" ")[0]
        dbworker.change_db_horoscope(call.message.chat.id, horoscope)
        bot.edit_message_text(chat_id=call.message.chat.id,
                              message_id=call.message.message_id,
                              text="–ó–Ω–∞–∫ –ó–æ–¥–∏–∞–∫–∞ –≤—ã–±—Ä–∞–Ω! –ù–∞–∂–º–∏ /today , —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å üòÑ",
                              reply_markup=markup.horoscope_done_troll(horoscope))
    elif call.data == "–æ-–æ":
        bot.answer_callback_query(call.id, text="–æ-–æ")


if __name__ == '__main__':
    bot.polling(none_stop=True)
